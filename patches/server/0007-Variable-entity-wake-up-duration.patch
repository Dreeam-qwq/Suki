From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sat, 25 Feb 2023 14:43:17 +0100
Subject: [PATCH] Variable entity wake-up duration

License: AGPL-3.0 (https://www.gnu.org/licenses/agpl-3.0.html)
Suki - https://github.com/SuCraft/Suki

diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index e93d12e9f4a577e468dfe2b6d2070bed22b83d81..5944cf199a2d49fffaa6b4b9fac5b295f74d3fb2 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -32,6 +32,9 @@ import co.aikar.timings.MinecraftTimings;
 import net.minecraft.world.entity.schedule.Activity;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.AABB;
+import org.sucraft.suki.configuration.SukiWorldConfiguration;
+
+import java.util.Random;
 
 public class ActivationRange
 {
@@ -57,6 +60,19 @@ public class ActivationRange
         Activity.PANIC
     };
 
+    // Suki start - variable entity wake-up duration
+    private static Random wakeUpDurationRandom = new Random();
+
+    private static int getWakeUpDurationWithVariance(Entity entity, int wakeUpDuration) {
+        SukiWorldConfiguration config = entity.level.sukiConfig();
+        var wakeUpDurationStandardDeviationRatio = config.gameplayMechanics.wakeUpDurationStandardDeviationRatio;
+        if (wakeUpDurationStandardDeviationRatio <= 0) {
+            return wakeUpDuration;
+        }
+        return (int) Math.min(Integer.MAX_VALUE, Math.max(1, Math.round(wakeUpDuration * wakeUpDurationRandom.nextGaussian(1, wakeUpDurationStandardDeviationRatio))));
+    }
+    // Suki end - variable entity wake-up duration
+
     private static int checkInactiveWakeup(Entity entity) {
         Level world = entity.level;
         SpigotWorldConfig config = world.spigotConfig;
@@ -64,22 +80,22 @@ public class ActivationRange
         if (entity.activationType == ActivationType.VILLAGER) {
             if (inactiveFor > config.wakeUpInactiveVillagersEvery && world.wakeupInactiveRemainingVillagers > 0) {
                 world.wakeupInactiveRemainingVillagers--;
-                return config.wakeUpInactiveVillagersFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveVillagersFor); // Suki - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.ANIMAL) {
             if (inactiveFor > config.wakeUpInactiveAnimalsEvery && world.wakeupInactiveRemainingAnimals > 0) {
                 world.wakeupInactiveRemainingAnimals--;
-                return config.wakeUpInactiveAnimalsFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveAnimalsFor); // Suki - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.FLYING_MONSTER) {
             if (inactiveFor > config.wakeUpInactiveFlyingEvery && world.wakeupInactiveRemainingFlying > 0) {
                 world.wakeupInactiveRemainingFlying--;
-                return config.wakeUpInactiveFlyingFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveFlyingFor); // Suki - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.MONSTER || entity.activationType == ActivationType.RAIDER) {
             if (inactiveFor > config.wakeUpInactiveMonstersEvery && world.wakeupInactiveRemainingMonsters > 0) {
                 world.wakeupInactiveRemainingMonsters--;
-                return config.wakeUpInactiveMonstersFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveMonstersFor); // Suki - variable entity wake-up duration
             }
         }
         return -1;
diff --git a/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java b/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
index 826537422959db83c06c0cd9ff61cb22e2b8bffe..95c6637944df8423ebc34bd0843e46e47ca6838d 100644
--- a/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
+++ b/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
@@ -46,6 +46,23 @@ public class SukiWorldConfiguration extends ConfigurationPart {
         public boolean nonSittingPetsImmuneFromInactive = true;
         // Suki end - non-sitting pet inactivity immunity
 
+        // Suki start - variable entity wake-up duration
+        /**
+         * This value is <code>σ</code> (the standard deviation) of the inactivity duration ratio,
+         * so that the regular time interval before will be multiplied by a factor <code>normal(μ = 1, σ)</code>.
+         * <br>
+         * A value of around 0.2 makes entities wake up from inactivity at more randomized times
+         * and therefore appear more natural in groups.
+         * <br>
+         * Any value < 0 behaves like 0.
+         * <ul>
+         *     <li><i>Default</i>: 0.2</li>
+         *     <li><i>Vanilla</i>: 0</li>
+         * </ul>
+         */
+        public double wakeUpDurationStandardDeviationRatio = 0.2;
+        // Suki end - variable entity wake-up duration
+
     }
 
 }
