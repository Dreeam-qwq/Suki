From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Tue, 21 Feb 2023 21:23:38 +0100
Subject: [PATCH] Do not relocate corrupted chunks

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Suki - https://github.com/SuCraft/Suki

diff --git a/src/main/java/net/minecraft/world/level/chunk/storage/ChunkSerializer.java b/src/main/java/net/minecraft/world/level/chunk/storage/ChunkSerializer.java
index 0ec80b83a99bfdb1f985045d98a81905a8a5a3ac..a8e231a49eb51d807ab1359d7e37be83eb705614 100644
--- a/src/main/java/net/minecraft/world/level/chunk/storage/ChunkSerializer.java
+++ b/src/main/java/net/minecraft/world/level/chunk/storage/ChunkSerializer.java
@@ -32,6 +32,7 @@ import net.minecraft.nbt.NbtUtils;
 import net.minecraft.nbt.ShortTag;
 import net.minecraft.nbt.Tag;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerChunkCache;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ThreadedLevelLightEngine;
@@ -159,7 +160,14 @@ public class ChunkSerializer {
         ChunkPos chunkcoordintpair1 = new ChunkPos(nbt.getInt("xPos"), nbt.getInt("zPos")); // Paper - diff on change, see ChunkSerializer#getChunkCoordinate
 
         if (!Objects.equals(chunkPos, chunkcoordintpair1)) {
+            if (world.sukiConfig().misc.relocateCorruptedChunks) { // Suki - do not relocate corrupted chunks
             ChunkSerializer.LOGGER.error("Chunk file at {} is in the wrong location; relocating. (Expected {}, got {})", new Object[]{chunkPos, chunkPos, chunkcoordintpair1});
+                // Suki start - do not relocate corrupted chunks
+            } else {
+                ChunkSerializer.LOGGER.error("Chunk file at {} is in the wrong location; stopping the server. (Expected {}, got {})", new Object[]{chunkPos, chunkPos, chunkcoordintpair1});
+                MinecraftServer.getServer().stopServer();
+            }
+            // Suki end - do not relocate corrupted chunks
         }
 
         UpgradeData chunkconverter = nbt.contains("UpgradeData", 10) ? new UpgradeData(nbt.getCompound("UpgradeData"), world) : UpgradeData.EMPTY;
diff --git a/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java b/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
index 826537422959db83c06c0cd9ff61cb22e2b8bffe..ef033d490722ef47ce6f1ccdf656df2495116091 100644
--- a/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
+++ b/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
@@ -48,4 +48,21 @@ public class SukiWorldConfiguration extends ConfigurationPart {
 
     }
 
+    public Misc misc;
+    public class Misc extends ConfigurationPart {
+
+        // Suki start - do not relocate corrupted chunks
+        /**
+         * Whether to relocate corrupted chunks when they are encountered.
+         * If set to false, the server will stop when corrupted chunks are encountered.
+         * <ul>
+         *     <li><i>Default</i>: true</li>
+         *     <li><i>Vanilla</i>: true</li>
+         * </ul>
+         */
+        public boolean relocateCorruptedChunks = true;
+        // Suki end - do not relocate corrupted chunks
+
+    }
+
 }
