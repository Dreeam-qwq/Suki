From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Thu, 4 Aug 2022 18:57:24 +0200
Subject: [PATCH] Increase max interaction distance


diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index 47baf669b4e551dc94650c5def9688c7632335f2..30902f914d29a4cec0d24c0bbc899b85f698d408 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -8,7 +8,10 @@ import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.format.NamedTextColor;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ServerboundPlaceRecipePacket;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.level.GameType;
 import org.bukkit.Bukkit; // Pufferfish
+import org.bukkit.GameMode;
 import org.checkerframework.checker.nullness.qual.Nullable;
 import org.spongepowered.configurate.objectmapping.ConfigSerializable;
 import org.spongepowered.configurate.objectmapping.meta.Comment;
@@ -16,6 +19,7 @@ import org.spongepowered.configurate.objectmapping.meta.Required;
 import org.spongepowered.configurate.objectmapping.meta.Setting;
 
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Objects;
 import java.util.logging.Level; // Pufferfish
@@ -203,6 +207,16 @@ public class GlobalConfiguration extends ConfigurationPart {
 
     // Suki end - configurable keepalive
 
+    // Suki start - increase max interaction distance
+
+    public InteractionDistance interactionDistance;
+
+    public class InteractionDistance extends ConfigurationPart {
+        public double max = 6.0D;
+    }
+
+    // Suki end - increase max interaction distance
+
     public Messages messages;
 
     public class Messages extends ConfigurationPart {
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java b/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
index 5a60f5dc202c44b06ca34e9a19d45cb715f74fd3..85c6fb720059d3806f149d446d662a053b1eee9b 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
@@ -3,6 +3,8 @@ package net.minecraft.server.level;
 import com.mojang.logging.LogUtils;
 import java.util.Objects;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.configuration.GlobalConfiguration;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.InteractionResultHolder;
@@ -173,7 +175,7 @@ public class ServerPlayerGameMode {
     private void debugLogging(BlockPos pos, boolean success, int sequence, String reason) {}
 
     public void handleBlockBreakAction(BlockPos pos, ServerboundPlayerActionPacket.Action action, Direction direction, int worldHeight, int sequence) {
-        if (this.player.getEyePosition().distanceToSqr(Vec3.atCenterOf(pos)) > ServerGamePacketListenerImpl.MAX_INTERACTION_DISTANCE) {
+        if (this.player.getEyePosition().distanceToSqr(Vec3.atCenterOf(pos)) > GlobalConfiguration.get().interactionDistance.max) { // Suki - increase max interaction distance
             if (true) return; // Paper - Don't notify if unreasonably far away
             this.debugLogging(pos, false, sequence, "too far");
         } else if (pos.getY() >= worldHeight) {
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index c8526362657d2348271490c2da99a7768fc6bc4b..b9345aa6996d90f8c474a439cf48d772005969d0 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -1,6 +1,5 @@
 package net.minecraft.server.network;
 
-import com.destroystokyo.paper.PaperConfig;
 import com.google.common.collect.Lists;
 import com.google.common.primitives.Floats;
 import com.mojang.brigadier.ParseResults;
@@ -253,7 +252,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
 
     static final Logger LOGGER = LogUtils.getLogger();
     private static final int LATENCY_CHECK_INTERVAL = 15000;
-    public static final double MAX_INTERACTION_DISTANCE = Mth.square(6.0D);
+    //public static final double MAX_INTERACTION_DISTANCE = Mth.square(6.0D); // Suki - increase max interaction distance
     private static final int NO_BLOCK_UPDATES_TO_ACK = -1;
     private static final int PENDING_MESSAGE_DISCONNECT_THRESHOLD = 4096;
     public final Connection connection;
@@ -1973,7 +1972,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
         BlockPos blockposition = movingobjectpositionblock.getBlockPos();
         Vec3 vec3d1 = Vec3.atCenterOf(blockposition);
 
-        if (this.player.getEyePosition().distanceToSqr(vec3d1) <= ServerGamePacketListenerImpl.MAX_INTERACTION_DISTANCE) {
+        if (this.player.getEyePosition().distanceToSqr(vec3d1) <= GlobalConfiguration.get().interactionDistance.max) { // Suki - increase max interaction distance
             Vec3 vec3d2 = vec3d.subtract(vec3d1);
             double d0 = 1.0000001D;
 
@@ -2943,7 +2942,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                 return;
             }
 
-            if (entity.distanceToSqr(this.player.getEyePosition()) < ServerGamePacketListenerImpl.MAX_INTERACTION_DISTANCE) {
+            if (entity.distanceToSqr(this.player.getEyePosition()) < GlobalConfiguration.get().interactionDistance.max) { // Suki - increase max interaction distance
                 packet.dispatch(new ServerboundInteractPacket.Handler() {
                     private void performInteraction(InteractionHand enumhand, ServerGamePacketListenerImpl.EntityInteraction playerconnection_a, PlayerInteractEntityEvent event) { // CraftBukkit
                         ItemStack itemstack = ServerGamePacketListenerImpl.this.player.getItemInHand(enumhand).copy();
