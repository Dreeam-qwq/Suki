From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Mon, 20 Jun 2022 15:39:21 +0200
Subject: [PATCH] Variable entity wake-up duration


diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index d8327448d14c82cf749427deabd26defcff722c2..73714aae88e5b55554d94d9332c2bccd0dfc5cd4 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -1,6 +1,5 @@
 package org.spigotmc;
 
-import com.destroystokyo.paper.PaperConfig;
 import io.papermc.paper.configuration.GlobalConfiguration;
 import net.minecraft.core.BlockPos;
 import net.minecraft.server.MinecraftServer;
@@ -64,6 +63,7 @@ import net.minecraft.world.phys.AABB;
 // Pufferfish start
 import net.minecraft.world.phys.Vec3;
 import java.util.List;
+import java.util.Random;
 // Pufferfish end
 import org.bukkit.entity.Enderman;
 import org.bukkit.entity.Fish;
@@ -92,6 +92,20 @@ public class ActivationRange
         Activity.PANIC
     };
 
+    // Suki start - variable entity wake-up duration
+
+    private static Random wakeUpDurationRandom = new Random();
+
+    private static int getWakeUpDurationWithVariance(Entity entity, int wakeUpDuration) {
+        SpigotWorldConfig config = entity.level.spigotConfig;
+        if (config.wakeUpDurationStandardDeviationRatio <= 0) {
+            return wakeUpDuration;
+        }
+        return (int) Math.min(Integer.MAX_VALUE, Math.max(1, Math.round(wakeUpDuration * wakeUpDurationRandom.nextGaussian(1, config.wakeUpDurationStandardDeviationRatio))));
+    }
+
+    // Suki end - variable entity wake-up duration
+
     private static int checkInactiveWakeup(Entity entity) {
         Level world = entity.level;
         SpigotWorldConfig config = world.spigotConfig;
@@ -99,22 +113,22 @@ public class ActivationRange
         if (entity.activationType == ActivationType.VILLAGER) {
             if (inactiveFor > config.wakeUpInactiveVillagersEvery && world.wakeupInactiveRemainingVillagers > 0) {
                 world.wakeupInactiveRemainingVillagers--;
-                return config.wakeUpInactiveVillagersFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveVillagersFor); // Suki - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.ANIMAL) {
             if (inactiveFor > config.wakeUpInactiveAnimalsEvery && world.wakeupInactiveRemainingAnimals > 0) {
                 world.wakeupInactiveRemainingAnimals--;
-                return config.wakeUpInactiveAnimalsFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveAnimalsFor); // Suki - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.FLYING_MONSTER) {
             if (inactiveFor > config.wakeUpInactiveFlyingEvery && world.wakeupInactiveRemainingFlying > 0) {
                 world.wakeupInactiveRemainingFlying--;
-                return config.wakeUpInactiveFlyingFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveFlyingFor); // Suki - variable entity wake-up duration
             }
         } else if (entity.activationType == ActivationType.MONSTER || entity.activationType == ActivationType.RAIDER) {
             if (inactiveFor > config.wakeUpInactiveMonstersEvery && world.wakeupInactiveRemainingMonsters > 0) {
                 world.wakeupInactiveRemainingMonsters--;
-                return config.wakeUpInactiveMonstersFor;
+                return getWakeUpDurationWithVariance(entity, config.wakeUpInactiveMonstersFor); // Suki - variable entity wake-up duration
             }
         }
         return -1;
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index c264c7454f548d31d034a8898d4ec3e612d00363..cbb0aad53128b8e301a468272ea927d3975eb7a1 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -227,6 +227,15 @@ public class SpigotWorldConfig
     public int wakeUpInactiveFlying = 8;
     public int wakeUpInactiveFlyingEvery = 10*20;
     public int wakeUpInactiveFlyingFor = 5*20;
+    // Suki start - variable entity wake-up duration
+    /**
+     * This value is sigma,
+     * where the normal wake-up time will be multiplied by normal(mu = 1, sigma)
+     *
+     * If this value is nonpositive, this feature will be disabled
+     */
+    public double wakeUpDurationStandardDeviationRatio = 0;
+    // Suki end - variable entity wake-up duration
     public int villagersWorkImmunityAfter = 5*20;
     public int villagersWorkImmunityFor = 20;
     public boolean villagersActiveForPanic = true;
@@ -292,6 +301,8 @@ public class SpigotWorldConfig
         this.wakeUpInactiveFlyingEvery = this.getInt("entity-activation-range.wake-up-inactive.flying-monsters-every", this.wakeUpInactiveFlyingEvery);
         this.wakeUpInactiveFlyingFor = this.getInt("entity-activation-range.wake-up-inactive.flying-monsters-for", this.wakeUpInactiveFlyingFor);
 
+        this.wakeUpDurationStandardDeviationRatio = this.getDouble("entity-activation-range.wake-up-inactive.duration-standard-deviation-ratio", this.wakeUpDurationStandardDeviationRatio); // Suki - variable entity wake-up duration
+
         this.villagersWorkImmunityAfter = this.getInt( "entity-activation-range.villagers-work-immunity-after", this.villagersWorkImmunityAfter );
         this.villagersWorkImmunityFor = this.getInt( "entity-activation-range.villagers-work-immunity-for", this.villagersWorkImmunityFor );
         this.villagersActiveForPanic = this.getBoolean( "entity-activation-range.villagers-active-for-panic", this.villagersActiveForPanic );
