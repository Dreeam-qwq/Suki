From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Thu, 27 Jan 2022 15:13:02 +0100
Subject: [PATCH] Per-player load, see and track view distance


diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 9e71e519cda72a1e2a01474f238b97015ec5115e..ef25591178be5d56a3356ff88fc81576b1229473 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -3910,14 +3910,21 @@ public interface World extends RegionAccessor, WorldInfo, PluginMessageRecipient
      */
     int getSendViewDistance();
 
+    // Suki start - per-player view distance
     /**
+     * <strike>
      * Sets the sending view distance for this world.
      * <p>
      * Sending view distance is the view distance where chunks will load in for players in this world.
      * </p>
-     * @param viewDistance view distance in [2, 32] or -1
+     * </strike>
+     * In Suki, has no effect
+     * @param viewDistance <strike>view distance in [2, 32] or -1</strike> unused
+     * @deprecated Has no effect
      */
+    @Deprecated
     void setSendViewDistance(int viewDistance);
+    // Suki end - per-player view distance
     // Paper end - view distance api
 
     // Spigot start
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index ee210425bd7196665d7848e28adb84492512f0eb..ea99f23c3754485f50d37ad3694a82e3de756891 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -2306,20 +2306,32 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public void setAffectsSpawning(boolean affects);
 
+    // Suki start - per-player view distance
     /**
+     * <strike>
      * Gets the view distance for this player
+     * </strike>
+     * <br>
+     * In Suki, returns the load view distance for this player
      *
-     * @return the player's view distance
-     * @see org.bukkit.World#getViewDistance()
+     * @return the player's load view distance
+     * @deprecated Use {@link #getLoadViewDistance()}
+     * @see #getLoadViewDistance()
      */
+    @Deprecated
     public int getViewDistance();
 
     /**
+     * <strike>
      * Sets the view distance for this player
+     * </strike>
+     * <br>
+     * In Suki, has no effect
      *
-     * @param viewDistance the player's view distance
-     * @see org.bukkit.World#setViewDistance(int)
+     * @param viewDistance <strike>the player's view distance</strike> unused
+     * @deprecated Has no effect
      */
+    @Deprecated
     public void setViewDistance(int viewDistance);
 
     /**
@@ -2335,48 +2347,88 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param simulationDistance the player's new simulation distance
      */
     public void setSimulationDistance(int simulationDistance);
-    
+
     /**
+     * <strike>
      * Gets the no-ticking view distance for this player.
      * <p>
      * No-tick view distance is the view distance where chunks will load, however the chunks and their entities will not
      * be set to tick.
      * </p>
-     * @return The no-tick view distance for this player.
-     * @deprecated Use {@link #getViewDistance()}
+     * </strike>
+     * In Suki, returns the load view distance for this player
+     * @return The <strike>no-tick</strike> load view distance for this player.
+     * @deprecated Use {@link #getLoadViewDistance()}
+     * @see #getLoadViewDistance()
      */
     @Deprecated
     public int getNoTickViewDistance();
 
     /**
+     * <strike>
      * Sets the no-ticking view distance for this player.
      * <p>
      * No-tick view distance is the view distance where chunks will load, however the chunks and their entities will not
      * be set to tick.
      * </p>
-     * @param viewDistance view distance in [2, 32] or -1
-     * @deprecated Use {@link #setViewDistance(int)}
+     * </strike>
+     * In Suki, has no effect
+     * @param viewDistance <strike>view distance in [2, 32] or -1</strike> unused
+     * @deprecated Has no effect
      */
     @Deprecated
     public void setNoTickViewDistance(int viewDistance);
 
     /**
+     * <strike>
      * Gets the sending view distance for this player.
      * <p>
      * Sending view distance is the view distance where chunks will load in for players.
      * </p>
-     * @return The sending view distance for this player.
+     * </strike>
+     * In Suki, returns the see view distance for this player
+     * @return The <strike>sending</strike> see view distance for this player.
+     * @deprecated Use {@link #getSeeViewDistance()}
+     * @see #getSeeViewDistance
      */
+    @Deprecated
     public int getSendViewDistance();
 
     /**
+     * <strike>
      * Sets the sending view distance for this player.
      * <p>
      * Sending view distance is the view distance where chunks will load in for players.
      * </p>
-     * @param viewDistance view distance in [2, 32] or -1
+     * </strike>
+     * In Suki, has no effect
+     * @param viewDistance <strike>view distance in [2, 32] or -1</strike> unused
+     * @deprecated Has no effect
      */
+    @Deprecated
     public void setSendViewDistance(int viewDistance);
+
+    /**
+     * Gets the track view distance for this player
+     *
+     * @return the player's track view distance
+     */
+    public int getTrackViewDistance();
+
+    /**
+     * Gets the see view distance for this player
+     *
+     * @return the player's see view distance
+     */
+    public int getSeeViewDistance();
+
+    /**
+     * Gets the load view distance for this player
+     *
+     * @return the player's load view distance
+     */
+    public int getLoadViewDistance();
+    // Suki end - per-player view distance
     // Paper end
 
     /**
